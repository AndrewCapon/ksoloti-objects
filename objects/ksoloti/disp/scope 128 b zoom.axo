<objdefs appVersion="1.0.12">
   <obj.normal id="scope 128 b zoom" uuid="698870c8-15f5-4fdc-adce-0e8de7eda6ef">
      <sDescription>Bipolar audio rate signal oscilloscope (time domain), showing 128 consecutive samples.

Magnify zooms in the waveform vertically. Good for quiet sounds and more efficient than
using external gain.

Timebase slows down the sampling, displaying longer time frames.
</sDescription>
      <author>Johannes Taelman, Ksoloti</author>
      <license>BSD</license>
      <helpPatch>scope.axh</helpPatch>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <frac32buffer.bipolar name="in" description="input"/>
         <bool32 name="hold" description="hold"/>
      </inlets>
      <outlets/>
      <displays>
         <int8array128.vbar name="scope" noLabel="true"/>
      </displays>
      <params/>
      <attribs>
         <combo name="magnify" description="vertical magnification">
            <MenuEntries>
               <string>x1</string>
               <string>x2</string>
               <string>x4</string>
               <string>x8</string>
            </MenuEntries>
            <CEntries>
               <string>21</string>
               <string>20</string>
               <string>19</string>
               <string>18</string>
            </CEntries>
         </combo>
         <combo name="timebase" description="display longer time frames">
            <MenuEntries>
               <string>/1</string>
               <string>/2</string>
               <string>/4</string>
               <string>/8</string>
               <string>/16</string>
            </MenuEntries>
            <CEntries>
               <string>0</string>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[int8_t t[128];
int index;]]></code.declaration>
      <code.init><![CDATA[int i;
for(i=0;i<128;i++)
	t[i]=0;

index = 0;]]></code.init>
      <code.krate><![CDATA[int i;

#if attr_timebase == 0
	for(i=0;i<16;i++)
		t[index++] = (uint8_t)__SSAT(inlet_in[i]>>attr_magnify, 8);

#elif attr_timebase == 1
	for(i=0;i<8;i++)
      t[index++] = (uint8_t)__SSAT(inlet_in[i*2]>>attr_magnify, 8);

#elif attr_timebase == 2
	for(i=0;i<4;i++)
      t[index++] = (uint8_t)__SSAT(inlet_in[i*4]>>attr_magnify, 8);

#elif attr_timebase == 3
	for(i=0;i<2;i++)
      t[index++] = (uint8_t)__SSAT(inlet_in[i*8]>>attr_magnify, 8);

#elif attr_timebase == 4
   t[index++] = (uint8_t)__SSAT(inlet_in[0]>>attr_magnify, 8);
#endif



if (index == 128) {
	index = 0;
	if (!inlet_hold) {
		for(i=0;i<128;i++)
 			disp_scope[i]=t[i];
	}
}]]></code.krate>
   </obj.normal>
</objdefs>