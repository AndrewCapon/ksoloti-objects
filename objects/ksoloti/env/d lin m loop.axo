<objdefs>
   <obj.normal id="d lin m loop" uuid="e9d9a5152981b17626748fd93e7e6a39c0afe4aa" sha="7cd630c1ecdc64542bf24aadc0f3114629fdf38d">
      <upgradeSha>eb6f75674508415f2023ef0ff4a23d2d9851dc93</upgradeSha>
      <sDescription>decay envelope, linear ramp, modulation input, with loop on/off inlet.</sDescription>
      <author>Johannes Taelman, Ksoloti</author>
      <helpPatch>env loop.axh</helpPatch>
      <license>BSD</license>
            <inlets>
         <bool32.risingfalling name="gate" description="If loop is off, trigger once. If loop is on, trigger and loop as long as gate is high, decay/release otherwise."/>
         <bool32.risingfalling name="loop" description="loop on/off"/>
         <frac32.bipolar name="d" description="decay time"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.klineartime.exp name="d" noLabel="true"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
int ntrig;
]]></code.declaration>
      <code.init><![CDATA[val = 0;
ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[if (inlet_gate && (!ntrig || (inlet_loop && val == 0))) { /* retrigger decay stage if loop is on and value reaches 0 */
  val = 1 << 27;
  ntrig = 1;
}
else {
  if (!(inlet_gate > 0))
    ntrig = 0;
  int32_t t;
  int32_t dt = param_d + inlet_d;
  MTOF(-dt,t);
  val -= t>>6;
  if (val < 0)
    val = 0;
}
outlet_env = val;
]]></code.krate>
   </obj.normal>
</objdefs>