<objdefs>
   <obj.normal id="d loop" uuid="190ae648e41832b41adbedb465317c18a011aefe" sha="d9f7cfe1295d7bcc550714a18126d4f73c7c8412">
      <upgradeSha>97cdffe5955bbcc941e3ab903bc58d2823414076</upgradeSha>
      <sDescription>decay envelope, with loop on/off inlet.</sDescription>
      <author>Johannes Taelman, Ksoloti</author>
      <helpPatch>env loop.axh</helpPatch>
      <license>BSD</license>
            <inlets>
         <bool32.risingfalling name="gate" description="If loop is off, trigger once. If loop is on, trigger and loop as long as gate is high, decay/release otherwise."/>
         <bool32.risingfalling name="loop" description="loop on/off"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map class="axoloti.parameters.ParameterFrac32SMapKDTimeExp" name="d" noLabel="true"/>
      </params>
      <attribs>
         <combo name="loop_threshold" description="&lt;html&gt;Trigger the loop once the value comes this close to the looping trigger value.&lt;br&gt;This helps improve the looping behaviour of exponential envelopes (they would take too long to reach the looping trigger).&lt;br&gt;&lt;br&gt;Example: Set loop_threshold to 0.1&lt;br&gt;-> ADSR Envelope attacks, then decays from full scale to (sustain + 0.1), then retriggers attack phase.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note that with this attribute set to anything other than zero, the envelope will never reach zero while looping.&lt;/b&gt;&lt;br&gt;Keep this in mind in case you need the value to reach precisely zero,&lt;br&gt;or you want to do some further logic processing, check for zero value, etc.&lt;/html&gt;">
            <MenuEntries>
               <string>0</string>
               <string>0.01</string>
               <string>0.1</string>
               <string>1</string>
            </MenuEntries>
            <CEntries>
               <string>0</string>
               <string>0x51EB</string>
               <string>0x33333</string>
               <string>0x200000</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[int32_t val;
int ntrig;
]]></code.declaration>
      <code.init><![CDATA[val = 0;
ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[if (inlet_gate && (!ntrig || (inlet_loop && val <= attr_loop__threshold))) {
         val =1<<27; ntrig=1;
         }
   else {
      if (!inlet_gate) ntrig=0; val = ___SMMUL(val, param_d)<<1;
      }
   outlet_env = val;
]]></code.krate>
   </obj.normal>
</objdefs>