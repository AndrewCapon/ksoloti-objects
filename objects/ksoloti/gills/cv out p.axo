<objdefs appVersion="1.0.12">
   <obj.normal id="cv out p" uuid="78c39cf4-581b-4230-88f9-4d663f4fca4d">
      <sDescription>Low-speed 12 bit digital to analog conversion, not suitable for audio signals, but for control voltages.
To be used with the Gills CV expander board.
Unipolar input (0...64). Suitable for unipolar LFOs, envelopes, etc.
NOT for creating 1V/oct pitch CV.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32.positive name="cv1"/>
         <frac32.positive name="cv2"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <combo name="offset">
            <MenuEntries>
               <string>E4 (0) = 0V (Axoloti)</string>
               <string>C4 (-4) = 0V (Eurorack)</string>
            </MenuEntries>
            <CEntries>
               <string>0</string>
               <string>(1&lt;&lt;22)</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[static const int hi_limit = 0x7FFFFFF;

int calc_cv_unipolar(int in, int offs) {
	int val = (1<<27) - in + offs;
	return __USAT(val, 27);
}]]></code.declaration>
      <code.init><![CDATA[palSetPadMode(GPIOA, 4, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, 5, PAL_MODE_INPUT_ANALOG);
RCC->APB1ENR |= 0x20000000;
DAC->CR |= 0x00010001;]]></code.init>
      <code.dispose><![CDATA[DAC->CR = 0x0;
RCC->APB1ENR &= ~0x20000000;
palSetPadMode(GPIOA, 4, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, 5, PAL_MODE_INPUT_ANALOG);]]></code.dispose>
      <code.krate><![CDATA[DAC->DHR12R1 = calc_cv_unipolar(inlet_cv1, attr_offset)>>15;
DAC->DHR12R2 = calc_cv_unipolar(inlet_cv2, attr_offset)>>15;]]></code.krate>
   </obj.normal>
</objdefs>